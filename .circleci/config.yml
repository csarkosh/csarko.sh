version: 2
jobs:
  build:
    working_directory: ~/csarko.sh
    docker:
      - image: csarko/node_terraform_awscli
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install dependencies
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: tests
          command: npm run test:ci
      - run:
          name: deploy web assets
          command: npm run build && aws s3 sync build s3://csarko.sh --exclude data
      - run:
          name: deploy "server" lambda
          command: |
            cp build/index.html lambdas/server/
            cd lambdas/server/
            npm ci
            zip -r server.zip * --exclude data --exclude docs
            aws s3 mv server.zip s3://csarko.sh-lambdas/
            aws --region us-east-1 lambda update-function-code --function-name csarko-website --s3-bucket csarko.sh-lambdas --s3-key server.zip
            cd ../..
      - run:
          name: deploy "cache-gh-data" lambda
          command: |
            cd lambdas/cache-gh-data
            npm ci
            zip -r cache-gh-data.zip *
            aws s3 mv cache-gh-data.zip s3://csarko.sh-lambdas/
            aws --region us-east-1 lambda update-function-code --function-name cache-gh-data --s3-bucket csarko.sh-lambdas --s3-key cache-gh-data.zip
            cd ../..
